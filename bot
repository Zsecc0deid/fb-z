#!/bin/bash
#Bash Obfuscation By Lmintcoder(Guzz)
#Obfuscation Tool Link : https://github.com/Lmintcoder/Bashcrypt
VHPwKVEavgUPSMhOTKDcsiCvCuFJCmnurwmfQORLtQmthWprpIAJDQydNheWDSSwOIPkbHqWxtVQOFtAhsXPDCuyuJnYdsuKPSFn="mpjyQJUqGniciraQQamXsCVgRaDBbETgXKudpiRERhMsqLXZFEunyYTaazEslytqakMgXclBkOLgHyncGwtBFwqFFEvhPAmmrRxw";GUlTqKUQuabtjAnImbGeJTnhsKFmnNFolDUVZyWnXwzQPIBLHQczohNBlYqVOJqcZyVKQgtLiCNkrUOVWXidutdtohnaWUVBTlbT="xEaATNpYhmhAUddAxlDILYNlzBXfOPxuRCndFaakTVycZhWtLYVIJrDSAGFcYpkRrmvOlAOZrjQRfOLugRsAbwZJaOsIZQmqwFoG";KkWLfAXeIJjMfqguEbhgUMjeRFtBRYTqRtbXJHarnCEYkrDAsiqMyLJTwoXCmEuKkkjcNQeKTRqlMrESRnejXmzJrGAdDnghYspw="ch";kAQDfZAJTseywLqjWsIWRiazAOhHYsIDhOQgTOSBbCxFOrxjbApjMcjRPlPDXUphVdHPjQBdHiquSxMIicppldMQwixcvKWxNLYz="4";RguyXouMjyXiDIBRfXjdEKjTWflEwuLxzLsHTsdNAtmjlwEsWrmfIydtRTTZOMkOhyfrzKUUQZPxibsdvVPAyldIAopWUHwVWfXV="";QuMcnNRTuEAdWoNTEbXhNdcPqyzFDyEYeubynSYlaJZWsYvlOhtFTxenhQOIhadRPSeRHVYdAeneGAZjfkCPCUKZmsObPeEJfxvL="wQShyBOoVEyrlsKqknTlGpTQLuZpnlHshgfbIcExUixNkQHohiayhKtfJfwDcNIHtpACvwfAdEWjDloEZibpwMcpmHkevpAmWxla";GaULrdMltXhgqjfDIEryzENuBjMwcQIZKZCSQXimLOXnAaNrequqnhKEEKZyOknJIKxgeahlSytmMRWgnbEiCavFvOcgVuhLBbOE=" = | r";zfMxoKoPGVdDCnDoiNqgYIItpnGQAOMecPYAmkZNprinZtUvRqHSaJYfUNcgKytZXGxrzgendTskBCZXgiXCsXIzmruubIjeszEq="EHXkrieuJEguhwfTNCTvMRyEtyJhoGirgmTynOgoCNAxdvAaKwTtyeswJsEXwZrlpjcQlzshTTlHMVZOooWAaNdzOpVTXPgLJFeX";eYreFVXSzPvNASEoCNEFEPyUQrFtEyQqPGuwAuWZRgfwKLzdJBPXSwfqKeUCwEOhZIpeXokPXziDislBBJNUiePZaihUPCbYvWbI="";hUBmvqMwVNKvjUhLWSSjZmQRmkeEYZcdawCBswMKLQllabPuxbfiOCDiQyIoagtZeXeuVbHakdVLUANgrHqcbfGNQeqLFiBgFGCP="as";gCSfoKGPwnSFKcZZijSWRLxdUucmTwKUPUtncdzwKxKufKMpDeRPxIwVvWAnUIftCdThoujhlFcLOrzNTjNdlPkkYMgkLhHsloBX="dkCdmuXshRlhahKroslsUiRgltlRZcUgXiARjRuySbQNOQAkPjgaEjeSvtoDiobizWRZWIxvzcDNOInDagzVyzzuRapveNziVrEU";tSBqoQIWLfHkxaepZiaIDdLEwZagKPOOctBJBfCYTNejUkBObWdIAGRtjoGpiwWxbOPjTMQpiwUNuJCIOuQuNmPJedTMBuIhFBbj="CNpgpChpjrkkQBhlaFfiQLIIsYNBIyUVkxyGSGXUxATgEgrzSuBAPublQeSoZfmLTMrkUlnHuMsfrtliWNtoFYSFjULLAkKcdtiZ";nfSVVafyUGXGnoAqVgVyShpWUdRGDVzTrhuYVjeOUSDQRwqBakZVBIDvOZSRrqxAXanlVJUcbrFrMRRPkBNzIxdfIpRUdvEFkBJB="o";FxhNjOHatPZCwkBFSnMZlSbaFhXqHXUxQEbtjFFuMGdRGRrezGbyUgDdCbesWOsgjozDbfKHUwrSvJZIgKySINKmVAVZqMKFtrEj="6";dDTAJySlsUAyXYlVsQOghaGNrdyiALCBGSxcmPbtQIXhmJCSBaELBlxCjOdfgLovFLIYTFFZHuOIGhIEmLHbNicPluTWyKcEQcHa="XPszpARpXsEqPgHiYLriTSDUzqsABWsqivphBnMBEQkCvUMQqDBFLkXyfYxAbmwczNyiLTcBYhclevUWVpsPKeIFZuijtRYakUWH";qlpCptNnoYlVZbBrmjXqoqnXipZXmxZbFWNLdKQcKmPSoJQjVfMYGsbhHRiyumWNyhBBsQNHzVLUwxYeTrXeuTxbONGYlVDPUVrK=" -d";zpYPOINhKyaCCQikfTSCJcGKejJYtpmQvFJangdyadooKDVRrEOwKYOeoBRvCTHXGcPywHnIlyiVsoYIhTSIVVrzliUFNqgOJWoJ="zxIMiDwPZCjRheltsRkLSRftrkwKCWUKctGMNIMMeRlMbGTXqLhalLLzBKhMFNfmnOEkherShSgVcNXxOsqMEQeCkDZhsFBDutAN";cJGbuiRyFzksoBMnRNhuCjPtIlfSaGGWlWVNtfkGzvQASERBuVGcgSdLGDCPmsumkTGMJNqAxQpyGXKofgdCUIGqzVAZeNFyxrsp="";UhaLkHtHHnxTjyBaOpHYtmxnsJRTIGDyTPdWFDrKPwiElWLPvehoYexOHDlevjiclQtqbbqlqITCqvTPGjeiDLnHHShNnwwbVsps="b";fAHwXfpShQKKtPSKknQIHfvFbbkqCDdfhbCPcRgxnMsSELtRnzHsBDFvZDpoCZwLhMbAoeuQEcPQhHSJwZoyyJORXDKiFAVsisVa="e";mZDAVIvUWbKBFLowTURqnwPHURXsMuRyRaqqyyKcOdiHwKSVHdHIrTDDYiijfdIQKOaPoBSvlOimZoZWQlbFaRWvxKyNIYeYPhQt="v |";Tx=Eds;gNtvmXTMPAcqsXMMdoKtGMMMeJPqkPMMlWWvWiBnLjJaQtwavWrStyAkFLmBvCsVyojqhBRwwJNQDFvDXASwxeuAYijrYAEjrIAY="";CbuGxzVgwtMvbHsokxFDAEfwRSEGFSfYdvHlpRJBjKTDSZdaleWGOlaRHHhXAevckhtukLwpiBQIVNTufasequJEoEyGNzycISDL=$(eval "$eYreFVXSzPvNASEoCNEFEPyUQrFtEyQqPGuwAuWZRgfwKLzdJBPXSwfqKeUCwEOhZIpeXokPXziDislBBJNUiePZaihUPCbYvWbI$fAHwXfpShQKKtPSKknQIHfvFbbkqCDdfhbCPcRgxnMsSELtRnzHsBDFvZDpoCZwLhMbAoeuQEcPQhHSJwZoyyJORXDKiFAVsisVa$KkWLfAXeIJjMfqguEbhgUMjeRFtBRYTqRtbXJHarnCEYkrDAsiqMyLJTwoXCmEuKkkjcNQeKTRqlMrESRnejXmzJrGAdDnghYspw$RguyXouMjyXiDIBRfXjdEKjTWflEwuLxzLsHTsdNAtmjlwEsWrmfIydtRTTZOMkOhyfrzKUUQZPxibsdvVPAyldIAopWUHwVWfXV$nfSVVafyUGXGnoAqVgVyShpWUdRGDVzTrhuYVjeOUSDQRwqBakZVBIDvOZSRrqxAXanlVJUcbrFrMRRPkBNzIxdfIpRUdvEFkBJB$GaULrdMltXhgqjfDIEryzENuBjMwcQIZKZCSQXimLOXnAaNrequqnhKEEKZyOknJIKxgeahlSytmMRWgnbEiCavFvOcgVuhLBbOE$fAHwXfpShQKKtPSKknQIHfvFbbkqCDdfhbCPcRgxnMsSELtRnzHsBDFvZDpoCZwLhMbAoeuQEcPQhHSJwZoyyJORXDKiFAVsisVa$mZDAVIvUWbKBFLowTURqnwPHURXsMuRyRaqqyyKcOdiHwKSVHdHIrTDDYiijfdIQKOaPoBSvlOimZoZWQlbFaRWvxKyNIYeYPhQt$eYreFVXSzPvNASEoCNEFEPyUQrFtEyQqPGuwAuWZRgfwKLzdJBPXSwfqKeUCwEOhZIpeXokPXziDislBBJNUiePZaihUPCbYvWbI$UhaLkHtHHnxTjyBaOpHYtmxnsJRTIGDyTPdWFDrKPwiElWLPvehoYexOHDlevjiclQtqbbqlqITCqvTPGjeiDLnHHShNnwwbVsps$gNtvmXTMPAcqsXMMdoKtGMMMeJPqkPMMlWWvWiBnLjJaQtwavWrStyAkFLmBvCsVyojqhBRwwJNQDFvDXASwxeuAYijrYAEjrIAY$hUBmvqMwVNKvjUhLWSSjZmQRmkeEYZcdawCBswMKLQllabPuxbfiOCDiQyIoagtZeXeuVbHakdVLUANgrHqcbfGNQeqLFiBgFGCP$fAHwXfpShQKKtPSKknQIHfvFbbkqCDdfhbCPcRgxnMsSELtRnzHsBDFvZDpoCZwLhMbAoeuQEcPQhHSJwZoyyJORXDKiFAVsisVa$FxhNjOHatPZCwkBFSnMZlSbaFhXqHXUxQEbtjFFuMGdRGRrezGbyUgDdCbesWOsgjozDbfKHUwrSvJZIgKySINKmVAVZqMKFtrEj$RguyXouMjyXiDIBRfXjdEKjTWflEwuLxzLsHTsdNAtmjlwEsWrmfIydtRTTZOMkOhyfrzKUUQZPxibsdvVPAyldIAopWUHwVWfXV$kAQDfZAJTseywLqjWsIWRiazAOhHYsIDhOQgTOSBbCxFOrxjbApjMcjRPlPDXUphVdHPjQBdHiquSxMIicppldMQwixcvKWxNLYz$qlpCptNnoYlVZbBrmjXqoqnXipZXmxZbFWNLdKQcKmPSoJQjVfMYGsbhHRiyumWNyhBBsQNHzVLUwxYeTrXeuTxbONGYlVDPUVrK$gNtvmXTMPAcqsXMMdoKtGMMMeJPqkPMMlWWvWiBnLjJaQtwavWrStyAkFLmBvCsVyojqhBRwwJNQDFvDXASwxeuAYijrYAEjrIAY");eval "$cJGbuiRyFzksoBMnRNhuCjPtIlfSaGGWlWVNtfkGzvQASERBuVGcgSdLGDCPmsumkTGMJNqAxQpyGXKofgdCUIGqzVAZeNFyxrsp$CbuGxzVgwtMvbHsokxFDAEfwRSEGFSfYdvHlpRJBjKTDSZdaleWGOlaRHHhXAevckhtukLwpiBQIVNTufasequJEoEyGNzycISDL$eYreFVXSzPvNASEoCNEFEPyUQrFtEyQqPGuwAuWZRgfwKLzdJBPXSwfqKeUCwEOhZIpeXokPXziDislBBJNUiePZaihUPCbYvWbI$RguyXouMjyXiDIBRfXjdEKjTWflEwuLxzLsHTsdNAtmjlwEsWrmfIydtRTTZOMkOhyfrzKUUQZPxibsdvVPAyldIAopWUHwVWfXV"